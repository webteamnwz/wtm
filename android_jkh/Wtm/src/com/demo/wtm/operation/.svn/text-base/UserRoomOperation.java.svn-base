package com.demo.wtm.operation;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.os.Bundle;
import android.util.Log;

import com.demo.wtm.config.RestConfig;
import com.demo.wtm.fragment.UserRoomFragment;
import com.demo.wtm.model.Room;
import com.demo.wtm.model.User;
import com.demo.wtm.service.Request;
import com.demo.wtm.service.RequestFactory;
import com.demo.wtm.service.RequestMethod;
import com.demo.wtm.service.RestService;
import com.demo.wtm.service.WitherestPreference;
import com.demo.wtm.service.RequestService.Operation;

public class UserRoomOperation implements Operation{
	
	private static final String TAG = "UserRoomOperation";

	@Override
	public Bundle execute(Context context, Request request) {
		// TODO Auto-generated method stub
				
		RestService client = new RestService(context);
		
		RequestMethod method = RequestMethod.valueOf(request.getString(RestConfig.DELIVER_TAG_METHOD));
		switch(method){
		case GET:{
			
		}
		break;
		case PUT:
		case POST:
		case DELETE:{
			String roomNo = request.getString(RestConfig.DELIVER_TAG_ROOM_NO);
			client.addParam(RestConfig.DELIVER_TAG_ROOM_NO, roomNo);
		}
		break;
		}
		
		try {
			client.execute(RestConfig.REST_SERVICE_URI_USER_ROOM, method, true);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
				
        Bundle bundle = new Bundle();


		try {
			JSONObject jObj = new JSONObject(client.getResponse());
			
			switch(method){
			case GET:{
				User user = new User();
				JSONArray jArray = jObj.getJSONArray(RestConfig.REST_JSON_TAG_USER_ROOM_LIST);
				
		        for (int i = 0; i < jArray.length(); i++) {
		            JSONObject jRoom = jArray.getJSONObject(i);
		            Room room = new Room(jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_NO)
		            		, jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_TITLE)
		            		, jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_MANAGER_ID)
		            		, jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_DESC)
		            		, jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_STARTDATE)
		            		, jRoom.getString(RestConfig.REST_JSON_TAG_ROOM_ENDDATE)
		            		, true);
		            room.mRoomJoinCnt = jRoom.getString(RestConfig.REST_JSON_TAG_USER_ROOM_CNT_JOIN_USER);
		            user.addRoom(room);
		        }
		        
		        bundle.putParcelable(RequestFactory.REQUEST_BUNDLE_USER_ROOM, user);	
			}
			break;
			case POST:
			case DELETE:
			case PUT:{				
				bundle.putString(RequestFactory.REQUEST_BUNDLE_USER_ROOM, jObj.getString(RestConfig.REST_JSON_TAG_MSG));
			}
			break;
			}
			

	        
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        		
        return bundle;
		
	}

}
